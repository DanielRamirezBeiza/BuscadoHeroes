{"version":3,"sources":["types/types.js","components/data/heroes.js","auth/authContext.js","auth/authReducer.js","components/ui/LoginScreen.js","components/selectors/getHeroByPublisher.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","components/dc/DcScreen.js","components/selectors/getHeroesById.js","components/heroes/HeroScreen.js","components/marvel/MarvelScreen.js","hooks/useForm.js","components/selectors/getHeroByName.js","components/search/SearchScreen.js","components/ui/Navbar.js","routrers/DashboardRoutes.js","routrers/PrivateRouter.js","routrers/PublicRouter.js","routrers/AppRouter.js","BuscadorApp.js","index.js"],"names":["types","login","logout","heroes","AuthContext","createContext","require","authReducer","state","action","type","payload","logged","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","name","replace","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","style","maxWidth","src","alt","to","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcScreen","HeroScreen","heroeId","useParams","console","log","find","length","push","goBack","MarvelScreen","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","value","getHeroByName","toLocaleLowerCase","SearchScreen","location","useLocation","queryString","parse","search","q","searchText","formValues","herosFiltered","onSubmit","e","preventDefault","placeholder","onChange","autoComplete","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","component","PrivateRouter","isAuthenticated","Component","rest","setItem","pathname","props","PublicRouter","AppRouter","BuscadorApp","useReducer","JSON","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03280ff9.chunk.js","sourcesContent":["export const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout',\r\n}","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","const { createContext } = require(\"react\");\r\n\r\nexport const AuthContext=  createContext();\r\n","\r\nconst { types } = require(\"../types/types\");\r\n\r\n\r\nexport const authReducer = (state={}, action) => {\r\n switch(action.type) {\r\n    case types.login:\r\n        return{\r\n            ...action.payload,\r\n            logged: true\r\n        }\r\n\r\n    case types.logout:\r\n        return{\r\n            logged: false\r\n        }\r\n        \r\n    \r\n    default:\r\n        return state;\r\n  }\r\n}","import React, {useContext} from 'react'\r\nimport { AuthContext } from '../../auth/authContext';\r\nimport { types } from '../../types/types';\r\n\r\n\r\n\r\nconst LoginScreen = ({history}) => {\r\n\r\n    const {dispatch} = useContext(AuthContext);\r\n    //console.log(user)\r\n\r\n    const handleLogin = () =>{\r\n\r\n        //Recuperar ultimo lugar visitado, sino al inicio\r\n        const lastPath = localStorage.getItem('lastPath') || '/'\r\n        \r\n        //Extraer funcion dispatch para llamar una accion que cambie el user\r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                name:'Invitado'\r\n            }\r\n        })\r\n\r\n        //Redireccionar al sitio:\r\n        history.replace(lastPath)\r\n        //history.push('/');\r\n        //history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>LoginScreen</h1>\r\n            <hr/>\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleLogin}\r\n            >\r\n                Ingresar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","const { heroes } = require(\"../data/heroes\");\r\n\r\nexport const getHeroesByPublisher = (publisher) =>{\r\n\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if (!validPublishers.includes(publisher)) {\r\n        throw new Error(`Publisher \"${publisher}\" no es correcto`);\r\n    }\r\n\r\n    return heroes.filter(hero=>hero.publisher === publisher);\r\n\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst HeroCard = ({\r\n        id,\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters\r\n                }) => {\r\n                   \r\n    return (\r\n        <div className=\"card ms-3\" style= { {maxWidth:540} }>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={ `./assets/heroes/heroes/${ id }.jpg` } className=\"card-img\" alt={ superhero } />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\"> {superhero}</h5>\r\n                        <p className=\"card-text\">{alter_ego}</p>\r\n\r\n                        {\r\n                            (alter_ego !== characters)\r\n                                && <p className=\"card-text\">{characters}</p>\r\n                        }\r\n\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\">{first_appearance}</small>\r\n                        </p>\r\n                        <Link to={`./hero/${id}`}>\r\n                            Más...\r\n                        </Link>\r\n                        \r\n                    </div>\r\n                </div>\r\n               \r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroCard\r\n","import React, {useMemo} from 'react'\r\n//import { getHeroesById } from '../selectors/getHeroesById'\r\nimport { getHeroesByPublisher} from '../selectors/getHeroByPublisher'\r\nimport HeroCard from './HeroCard'\r\n\r\n\r\nconst HeroList = ({publisher}) => {\r\n    //Método simple\r\n    //const heroes= getHeroesByPublisher(publisher);\r\n\r\n    //Método para prevenir re-renderizaciones\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher]);\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\">\r\n            {\r\n                heroes.map(hero =>(\r\n                    <HeroCard \r\n                        key={hero.id}\r\n                        {...hero}\r\n                    />\r\n                    \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroList\r\n","import React from 'react'\r\nimport HeroList from '../heroes/HeroList'\r\n\r\nconst DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DC screen</h1>\r\n            <hr/>\r\n            <HeroList publisher ='DC Comics'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DcScreen\r\n","const { heroes } = require(\"../data/heroes\");\r\n\r\nexport const getHeroesById= (id) =>{\r\n\r\n\r\n\r\n\r\n\r\n    return heroes.find(hero=>hero.id ===id);\r\n}","import React, {useMemo} from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { getHeroesById } from '../selectors/getHeroesById';\r\n\r\n\r\n\r\nconst HeroScreen = ({history}) => {\r\n    //->>hook de react router doom\r\n    //const params = useParams();\r\n    //console.log(params)\r\n\r\n    //Lo mismo pero con desestructuración\r\n    const {heroeId} = useParams();\r\n    console.log(heroeId);\r\n\r\n    //Detalles\r\n    //const hero = getHeroesById(heroeId);\r\n    //console.log(hero);\r\n\r\n    //Método para conseguir detalles de información previa\r\n    const hero = useMemo(() => getHeroesById(heroeId), [heroeId])\r\n    \r\n    //Metodo: si no encuentra un hero\r\n    if(!hero){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const handleReturn= () =>{\r\n    //Método para redigirir al inicio en caso de no tener historial.\r\n        if(history.length <=2){\r\n            history.push('/')\r\n        }else{\r\n        history.goBack();\r\n        }\r\n    }\r\n\r\n    const{\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters\r\n    } = hero;\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img \r\n                    src={`../assets/heroes/heroes/${heroeId}.jpg`} \r\n                    className=\"img-thumbnail animate__animated animate__backInLeft\"\r\n                    alt={heroeId} \r\n                />\r\n            </div>\r\n            <div className=\"col-8\">\r\n                <h3>{superhero}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"> <b>Identidad secreta: </b>{alter_ego}</li>\r\n                    <li className=\"list-group-item\"> <b>Compañia: </b>{publisher}</li>\r\n                    <li className=\"list-group-item\"> <b>Primera aparición: </b>{first_appearance}</li>\r\n                </ul>\r\n                <h5>Identidades</h5>\r\n                <p>{characters}</p>\r\n\r\n                <button\r\n                    className=\" btn btn-outline-info\"\r\n                    onClick= { handleReturn }\r\n                    >\r\n                        Regresar\r\n                </button>\r\n                \r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroScreen\r\n","import React from 'react'\r\nimport HeroList from '../heroes/HeroList'\r\n\r\nconst MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>marvel screen</h1>\r\n            <hr/>\r\n            <HeroList publisher ='Marvel Comics' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarvelScreen\r\n","import {useState} from 'react'\r\n\r\n//Hook para realizar operaciones con los fomularios\r\n//Values son los valores segun su nombre del input\r\n//reset convirte los valores en un objeto vacio\r\n//handleInputChange recibe los cambios en el formulario\r\n\r\nconst useForm = ( initialState= {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () =>{\r\n        setValues(initialState);\r\n    }\r\n    const handleInputChange=({target})=>{\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    return [values, handleInputChange, reset]\r\n}\r\n\r\nexport default useForm\r\n\r\n\r\n\r\n\r\n","import { heroes } from '../data/heroes'\r\n\r\n\r\nconst getHeroByName = (name = '') => {\r\n\r\n    if (name === ''){\r\n        return [];\r\n    }\r\n\r\n    name = name.toLocaleLowerCase();\r\n    return heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes(name))\r\n}\r\n\r\nexport default getHeroByName\r\n","import React, { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport useForm from '../../hooks/useForm';\r\nimport HeroCard from '../heroes/HeroCard';\r\nimport queryString from 'query-string';\r\nimport getHeroByName from '../selectors/getHeroByName';\r\n\r\n\r\n//useForm\r\n\r\nconst SearchScreen = ({history}) => {\r\n\r\n      //Hook de location\r\n      const location =useLocation();\r\n      //console.log(location);\r\n\r\n    //-->Uso del queryString\r\n    //-->Ver propiedades del componente: console.log(location.search);\r\n    //-->Ver ejecucion del queryString: console.log(queryString.parse())\r\n    //-->Ver resultados del queryString: console.log(queryString.parse(location.search))\r\n    const { q = '' } = queryString.parse(location.search)\r\n\r\n    \r\n    //-->importacion del useForm\r\n    const [formValues, handleInputChange] = useForm({\r\n        searchText: q\r\n    });\r\n\r\n    //desestructuración del hook\r\n    const {searchText} = formValues\r\n    \r\n\r\n    //-->Filtro de resultados (useMemo)\r\n    const herosFiltered = useMemo(() => getHeroByName(q), [q] )\r\n    //const herosFiltered = getHeroByName(searchText);\r\n\r\n  \r\n\r\n\r\n    //-->funciones del formulario\r\n    const handleSearch = (e)=>{\r\n        e.preventDefault();\r\n    //console.log(searchText);\r\n    history.push(`?q=${searchText}`)\r\n        \r\n    \r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Pantalla de busquedas</h1>\r\n            <hr/>\r\n\r\n            <div className=\"row\">   \r\n                <div className=\"col-5\">\r\n                    <h4>Formulario busquedas</h4>\r\n                    <hr/>\r\n                    <form onSubmit={handleSearch}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Buscador de heroes\"\r\n                            className=\"form-control\"\r\n                            onChange= {handleInputChange}\r\n                            name=\"searchText\"\r\n                            value= {searchText}\r\n                            autoComplete=\"off\"\r\n                            \r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        >\r\n                             Buscando...\r\n                        </button>\r\n        \r\n                    </form>\r\n                </div>  \r\n                <div className=\"col-7\">\r\n                    <h4>Resultados</h4>\r\n                    <hr/>\r\n\r\n                    {(q==='')\r\n                        &&\r\n                        <div className=\"alert alert-info\">\r\n                        Busca un heroe\r\n                    </div>\r\n                    }\r\n\r\n                    {(q !== '' && herosFiltered.length === 0)\r\n                        &&\r\n                        <div className=\"alert alert-info\">\r\n                        {q} No se encontro\r\n                    </div>\r\n                    }\r\n\r\n                    {\r\n                        herosFiltered.map(hero=>(\r\n                            <HeroCard\r\n                                key={hero.id}\r\n                                {...hero}\r\n                            />\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchScreen\r\n","import React, {useContext} from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/authContext'\r\nimport { types } from '../../types/types'\r\n\r\n\r\n\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {user, dispatch} = useContext(AuthContext);\r\n    const {name} = user;\r\n    //console.log(name)\r\n\r\n    //Recuperacion del historial mediante el hook useHistory\r\n    const history = useHistory();\r\n    //console.log(history)\r\n\r\n    const handleLogout= () =>{\r\n        dispatch({\r\n            type: types.logout,\r\n            \r\n        })\r\n        history.replace('/login')\r\n        \r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n                    \r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Buscador\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                     \r\n                        <span className=\"nav-item nav-link text-info\">{name}</span>\r\n                        \r\n                    \r\n                    <button\r\n                        onClick={handleLogout}\r\n                        className=\"nav-item btn\" \r\n                        \r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport DcScreen from '../components/dc/DcScreen'\r\nimport HeroScreen from '../components/heroes/HeroScreen'\r\nimport MarvelScreen from '../components/marvel/MarvelScreen'\r\nimport SearchScreen from '../components/search/SearchScreen'\r\nimport { Navbar } from '../components/ui/Navbar'\r\n\r\n\r\n\r\nconst DashboardRoutes = () => {\r\n    \r\n    return (\r\n        <>\r\n           <Navbar/> \r\n           \r\n           <div className=\"container mt-2\">\r\n               <Switch>\r\n                   <Route exact path=\"/marvel\" component={MarvelScreen} />\r\n                   <Route exact path=\"/hero/:heroeId\" component={HeroScreen} />\r\n                   <Route exact path=\"/dc\" component={DcScreen} />\r\n                   <Route exact path=\"/search\" component={SearchScreen} />\r\n                  \r\n                    <Redirect to= \"/marvel\" />\r\n               </Switch>\r\n           </div>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardRoutes\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    //Rest es un nombre para bautizar las props restantes del componente\r\n    //console.log(rest);\r\n    //--------------------\r\n\r\n    //Guardar en el localStorage ultimo lugar visitado (en este router)\r\n    //-->Ver valor del ultimo url: console.log(rest.location.pathname);\r\n    //-->Ver valor de busqueda realizada: console.log(rest.location.search);\r\n    \r\n    //--->Concatenacion de valores para recordar url compuesta varias variables\r\n    localStorage.setItem('lastPath', rest.location.pathname+rest.location.search)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props)  =>(\r\n                (isAuthenticated)\r\n                ? <Component {...props} />\r\n                : (<Redirect to= \"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n        {...rest}\r\n            component={ (props) =>(\r\n                (!isAuthenticated)\r\n                ?  <Component {...props} />\r\n                : (<Redirect to= \"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, {useContext} from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"../auth/authContext\";\r\nimport LoginScreen from \"../components/ui/LoginScreen\";\r\nimport DashboardRoutes from \"./DashboardRoutes\";\r\nimport { PrivateRouter } from \"./PrivateRouter\";\r\nimport { PublicRouter } from \"./PublicRouter\";\r\n\r\n\r\nconst AppRouter = () => {\r\n\r\n    const {user} = useContext(AuthContext)\r\n    const {logged} = user;\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n            \r\n                <Switch>\r\n                    <PublicRouter \r\n                        exact path=\"/login\" \r\n                        component ={LoginScreen} \r\n                        isAuthenticated= {logged}\r\n                    />\r\n                    \r\n                    <PrivateRouter\r\n                        path=\"/\" \r\n                        component ={DashboardRoutes}\r\n                        isAuthenticated= {logged} />\r\n                    \r\n                    \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React, {useEffect, useReducer} from 'react'\r\nimport { AuthContext } from './auth/authContext'\r\nimport { authReducer } from './auth/authReducer'\r\nimport AppRouter from './routrers/AppRouter'\r\n\r\nconst BuscadorApp = () => {\r\n\r\n    const init =()=>{\r\n        return JSON.parse( localStorage.getItem('user') )|| {logged:false}\r\n    };\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user) );\r\n        }, [user] )\r\n\r\n    return (\r\n        <AuthContext.Provider value= { {user, dispatch} }>\r\n            <AppRouter/>\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BuscadorApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BuscadorApp from './BuscadorApp';\n//import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <BuscadorApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}